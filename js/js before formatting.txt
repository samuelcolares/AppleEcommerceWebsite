/* CUBE

let x = 0
let y = 20
let z = 0
let flagCube = true
let intervalCube
const cube = document.querySelector('.cube')
document.querySelector('.top-x-control').addEventListener('click', () => {
    cube.style.transform = `rotateX(${x += 20}deg) rotateY(${y}deg) rotateZ(${z}deg)`
})
document.querySelector('.bottom-x-control').addEventListener('click', () => {
    cube.style.transform = `rotateX(${x -= 20}deg) rotateY(${y}deg) rotateZ(${z}deg)`
})

document.querySelector('.left-y-control').addEventListener('click', () => {
    cube.style.transform = `rotateX(${x}deg) rotateY(${y -= 20}deg) rotateZ(${z}deg)`
})
document.querySelector('.right-y-control').addEventListener('click', () => {
    cube.style.transform = `rotateX(${x}deg) rotateY(${y += 20}deg) rotateZ(${z}deg)`
})

document.querySelector('.top-z-control').addEventListener('click', () => {
    cube.style.transform = `rotateX(${x}deg) rotateY(${y}deg) rotateZ(${z += 20}deg)`
})
document.querySelector('.bottom-z-control').addEventListener('click', () => {
    cube.style.transform = `rotateX(${x}deg) rotateY(${y}deg) rotateZ(${z -= 20}deg)`
})
document.querySelector('.reset').addEventListener('click', () => {
    cube.style.transform = `rotateX(${x = 0}deg) rotateY(${y = 0}deg) rotateZ(${z = 0}deg)`
})

const playPause = () => {
    if (flagCube) {
        intervalCube = setInterval(() => {
            cube.style.transform = `rotateX(${x}deg) rotateY(${y++}deg) rotateZ(${z}deg)`
        }, 100)
    } else {
        clearInterval(intervalCube)
    }
}
playPause()
document.querySelector('.controls').addEventListener('mouseover', () => {
    flagCube = false
    playPause()
})
document.querySelector('.controls').addEventListener('mouseout', () => {
    flagCube = true
    playPause()
})

 END OF CUBE  */

----

/* SLIDESHOW
const slideshow = document.querySelector('.slideshow')

const slideshowDivs = () => {
    for (i = 1; i <= 5; i++) {
        const slide = document.createElement('div')
        slide.classList.add(`slide`)
        slide.style.background = `url(img/slideshow/section-1-bg-${i}.jpg)`
        i === 1 && slide.classList.add(`change`)
        slideshow.appendChild(slide)
    }
}

slideshowDivs()
let count = 0
const slides = document.querySelectorAll(`.slide`)
function changeBg() {
    count++
    const slide = document.querySelector('.slide.change')
    slide.classList.remove('change')

    if (count < slides.length) {
        slide.nextElementSibling.classList.add('change')
    } else {
        slides[0].classList.add('change')
        count = 0
    }
}
let interval = setInterval(changeBg, 20000)






-- Test Function
function changeBg(){
    	
}

END OF SLIDESHOW */

---

/* MACBOOK
const section3Content = document.querySelector('.section-3-content')

window.addEventListener('scroll', () => {
    if (window.pageYOffset + window.innerHeight >= section3Content.offsetTop + section3Content.offsetHeight / 2) {
        // console.log(`pageYOffset: ${window.pageYOffset}, innerHeight:${window.innerHeight};; pageYOffset + innerHeight: ${window.pageYOffset + window.innerHeight}`);
        // console.log(``);
        // console.log(`S3-OffsetTop: ${section3Content.offsetTop}, S3.offsetHeight / 2: ${section3Content.offsetHeight / 2};; S3-OffsetTop + S3.offsetHeight / 2: ${section3Content.offsetTop + section3Content.offsetHeight / 2}`)

        section3Content.classList.add('change')
    }
})
END OF MACBOOK*/


---



/* APPLEWATCH

const watchBands = document.querySelector('.watch-bands')
const watchCases = document.querySelector('.watch-cases')

const watchTopControl = document.querySelector('.watch-top-control')
const watchRightControl = document.querySelector('.watch-right-control')
const watchBottomControl = document.querySelector('.watch-bottom-control')
const watchLeftControl = document.querySelector('.watch-left-control')

let axisY = 0
let axisX = 0

watchTopControl.addEventListener('click', () => {
    axisY -= 70
    if (axisY > -350) {
        watchCases.style.marginTop = `${axisY}rem`
    } else {
        axisY = 280
        watchCases.style.marginTop = `${axisY}rem`
    }
})

watchBottomControl.addEventListener('click', () => {
    axisY += 70
    if (axisY < 350) {
        watchCases.style.marginTop = `${axisY}rem`
    } else {
        axisY = -280
        watchCases.style.marginTop = `${axisY}rem`
    }
})

watchRightControl.addEventListener('click', () => {
    axisX -= 70
    if (axisX > -350) {
        watchBands.style.marginLeft = `${axisX}rem`
    } else {
        axisX = 280
        watchBands.style.marginLeft = `${axisX}rem`
    }
})

watchLeftControl.addEventListener('click', () => {
    axisX += 70
    if (axisX < 350) {
        watchBands.style.marginLeft = `${axisX}rem`
    } else {
        axisX = -280
        watchBands.style.marginLeft = `${axisX}rem`
    }
}) 

END OF APPLEWATCH */

---

/* Scroll
const homeBtn = document.querySelectorAll('.home-btn')
const iphone14Btn = document.querySelectorAll('.iphone14-btn')
const macbookAirBtn = document.querySelectorAll('.macbookAir-btn')
const aWatchBtn = document.querySelectorAll('.aWatch-btn')
const airpodProBtn = document.querySelectorAll('.airpodPro-btn')
const sections = document.querySelectorAll('section')
const arrSections = [...sections].map(x => x.offsetTop)

function goTo(x) {
    window.scrollTo({
        top: x,
        behavior: 'smooth',
    })
}

homeBtn.forEach(button => {
    button.addEventListener('click', () => {
        y = sections[0].offsetTop
        goTo(y)
    })
})
iphone14Btn.forEach(button => {
    button.addEventListener('click', () => {
        y = sections[1].offsetTop
        goTo(y)
    })
})
macbookAirBtn.forEach(button => {
    button.addEventListener('click', () => {
        y = sections[2].offsetTop
        goTo(y)
    })
})
aWatchBtn.forEach(button => {
    button.addEventListener('click', () => {
        y = sections[3].offsetTop + sections[3].offsetHeight * 0.14
        goTo(y)
    })
})
airpodProBtn.forEach(button => {
    button.addEventListener('click', () => {
        y = sections[4].offsetTop
        goTo(y)
    })
})

*/